// Mocks generated by Mockito 5.3.2 from annotations
// in fluze/test/funcs/funcs_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:ui' as _i5;

import 'package:flutter/material.dart' as _i2;
import 'package:fluze/data/models/user.dart' as _i3;
import 'package:fluze/data/storage/shared_prefs.dart' as _i6;
import 'package:fluze/helpers/utils/funcs.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTextStyle_0 extends _i1.SmartFake implements _i2.TextStyle {
  _FakeTextStyle_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i2.DiagnosticLevel? minLevel = _i2.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeWidget_1 extends _i1.SmartFake implements _i2.Widget {
  _FakeWidget_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i2.DiagnosticLevel? minLevel = _i2.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeUser_2 extends _i1.SmartFake implements _i3.User {
  _FakeUser_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AppFunctions].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppFunctions extends _i1.Mock implements _i4.AppFunctions {
  @override
  _i2.TextStyle adaptableTextStyle({
    double? size,
    _i5.FontWeight? fontWeight,
    _i5.Color? color,
    double? lineSpacing,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #adaptableTextStyle,
          [],
          {
            #size: size,
            #fontWeight: fontWeight,
            #color: color,
            #lineSpacing: lineSpacing,
          },
        ),
        returnValue: _FakeTextStyle_0(
          this,
          Invocation.method(
            #adaptableTextStyle,
            [],
            {
              #size: size,
              #fontWeight: fontWeight,
              #color: color,
              #lineSpacing: lineSpacing,
            },
          ),
        ),
        returnValueForMissingStub: _FakeTextStyle_0(
          this,
          Invocation.method(
            #adaptableTextStyle,
            [],
            {
              #size: size,
              #fontWeight: fontWeight,
              #color: color,
              #lineSpacing: lineSpacing,
            },
          ),
        ),
      ) as _i2.TextStyle);
  @override
  _i2.TextStyle adaptableTextStyleUnderLine({
    double? size,
    _i5.FontWeight? fontWeight,
    _i5.Color? color,
    double? lineSpacing,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #adaptableTextStyleUnderLine,
          [],
          {
            #size: size,
            #fontWeight: fontWeight,
            #color: color,
            #lineSpacing: lineSpacing,
          },
        ),
        returnValue: _FakeTextStyle_0(
          this,
          Invocation.method(
            #adaptableTextStyleUnderLine,
            [],
            {
              #size: size,
              #fontWeight: fontWeight,
              #color: color,
              #lineSpacing: lineSpacing,
            },
          ),
        ),
        returnValueForMissingStub: _FakeTextStyle_0(
          this,
          Invocation.method(
            #adaptableTextStyleUnderLine,
            [],
            {
              #size: size,
              #fontWeight: fontWeight,
              #color: color,
              #lineSpacing: lineSpacing,
            },
          ),
        ),
      ) as _i2.TextStyle);
  @override
  _i2.Widget verticalSpacing(double? size) => (super.noSuchMethod(
        Invocation.method(
          #verticalSpacing,
          [size],
        ),
        returnValue: _FakeWidget_1(
          this,
          Invocation.method(
            #verticalSpacing,
            [size],
          ),
        ),
        returnValueForMissingStub: _FakeWidget_1(
          this,
          Invocation.method(
            #verticalSpacing,
            [size],
          ),
        ),
      ) as _i2.Widget);
  @override
  _i2.Widget horizontalSpacing(double? size) => (super.noSuchMethod(
        Invocation.method(
          #horizontalSpacing,
          [size],
        ),
        returnValue: _FakeWidget_1(
          this,
          Invocation.method(
            #horizontalSpacing,
            [size],
          ),
        ),
        returnValueForMissingStub: _FakeWidget_1(
          this,
          Invocation.method(
            #horizontalSpacing,
            [size],
          ),
        ),
      ) as _i2.Widget);
  @override
  void dismiss() => super.noSuchMethod(
        Invocation.method(
          #dismiss,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  dynamic showErrorFlushBar(
    _i2.BuildContext? context,
    String? error,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #showErrorFlushBar,
          [
            context,
            error,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  dynamic showSuccessFlushBar(
    _i2.BuildContext? context,
    String? message,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #showSuccessFlushBar,
          [
            context,
            message,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool validateEmail(String? email) => (super.noSuchMethod(
        Invocation.method(
          #validateEmail,
          [email],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool validateString(String? email) => (super.noSuchMethod(
        Invocation.method(
          #validateString,
          [email],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool validateSequence(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #validateSequence,
          [pin],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool validateRepetition(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #validateRepetition,
          [pin],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}

/// A class which mocks [AppStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppStorage extends _i1.Mock implements _i6.AppStorage {
  @override
  _i7.Future<void> saveUserData({
    String? email,
    String? name,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserData,
          [],
          {
            #email: email,
            #name: name,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<_i3.User> getUserData() => (super.noSuchMethod(
        Invocation.method(
          #getUserData,
          [],
        ),
        returnValue: _i7.Future<_i3.User>.value(_FakeUser_2(
          this,
          Invocation.method(
            #getUserData,
            [],
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i3.User>.value(_FakeUser_2(
          this,
          Invocation.method(
            #getUserData,
            [],
          ),
        )),
      ) as _i7.Future<_i3.User>);
}
